<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1" xml:space="preserve">
    <value>Sunny</value>
  </data>
  <data name="10" xml:space="preserve">
    <value>Overcast, some sleet</value>
  </data>
  <data name="101" xml:space="preserve">
    <value>Clear sky</value>
  </data>
  <data name="102" xml:space="preserve">
    <value>Slightly overcast</value>
  </data>
  <data name="103" xml:space="preserve">
    <value>Heavy cloud formations</value>
  </data>
  <data name="104" xml:space="preserve">
    <value>Overcast</value>
  </data>
  <data name="105" xml:space="preserve">
    <value>Very cloudy</value>
  </data>
  <data name="106" xml:space="preserve">
    <value>Overcast, scattered showers</value>
  </data>
  <data name="107" xml:space="preserve">
    <value>Overcast, scattered rain and snow showers</value>
  </data>
  <data name="108" xml:space="preserve">
    <value>Overcast, snow showers</value>
  </data>
  <data name="109" xml:space="preserve">
    <value>Overcast, some showers</value>
  </data>
  <data name="11" xml:space="preserve">
    <value>Overcast, some snow showers</value>
  </data>
  <data name="110" xml:space="preserve">
    <value>Overcast, some rain and snow showers</value>
  </data>
  <data name="111" xml:space="preserve">
    <value>Overcast, some snow showers</value>
  </data>
  <data name="112" xml:space="preserve">
    <value>Slightly stormy</value>
  </data>
  <data name="113" xml:space="preserve">
    <value>Storms</value>
  </data>
  <data name="114" xml:space="preserve">
    <value>Very cloudy, light rain</value>
  </data>
  <data name="115" xml:space="preserve">
    <value>Very cloudy, light rain and snow showers</value>
  </data>
  <data name="116" xml:space="preserve">
    <value>Very cloudy, light snowfall</value>
  </data>
  <data name="117" xml:space="preserve">
    <value>Very cloudy, intermittent rain</value>
  </data>
  <data name="118" xml:space="preserve">
    <value>Very cloudy, intermittant mixed rain and snowfall</value>
  </data>
  <data name="119" xml:space="preserve">
    <value>Very cloudy, intermittent snowfall</value>
  </data>
  <data name="12" xml:space="preserve">
    <value>Sunny intervals, chance of thunderstorms</value>
  </data>
  <data name="120" xml:space="preserve">
    <value>Very cloudy, constant rain</value>
  </data>
  <data name="121" xml:space="preserve">
    <value>Very cloudy, frequent rain and snowfall</value>
  </data>
  <data name="122" xml:space="preserve">
    <value>Very cloudy, heavy snowfall</value>
  </data>
  <data name="123" xml:space="preserve">
    <value>Very cloudy, slightly stormy</value>
  </data>
  <data name="124" xml:space="preserve">
    <value>Very cloudy, stormy</value>
  </data>
  <data name="125" xml:space="preserve">
    <value>Very cloudy, storms</value>
  </data>
  <data name="126" xml:space="preserve">
    <value>High cloud cover</value>
  </data>
  <data name="127" xml:space="preserve">
    <value>Stratus</value>
  </data>
  <data name="128" xml:space="preserve">
    <value>Fog</value>
  </data>
  <data name="129" xml:space="preserve">
    <value>Slightly overcast, scattered showers</value>
  </data>
  <data name="13" xml:space="preserve">
    <value>Sunny intervals, possible thunderstorms</value>
  </data>
  <data name="130" xml:space="preserve">
    <value>Slightly overcast, scattered snowfall</value>
  </data>
  <data name="131" xml:space="preserve">
    <value>Slightly overcast, rain and snow showers</value>
  </data>
  <data name="132" xml:space="preserve">
    <value>Slightly overcast, some showers</value>
  </data>
  <data name="133" xml:space="preserve">
    <value>Overcast, frequent rain showers</value>
  </data>
  <data name="134" xml:space="preserve">
    <value>Overcast, frequent snow showers</value>
  </data>
  <data name="135" xml:space="preserve">
    <value>Overcast and dry</value>
  </data>
  <data name="136" xml:space="preserve">
    <value>Slightly overcast, slightly stormy</value>
  </data>
  <data name="137" xml:space="preserve">
    <value>Slightly overcast, stormy snow showers</value>
  </data>
  <data name="138" xml:space="preserve">
    <value>Overcast, thundery showers</value>
  </data>
  <data name="139" xml:space="preserve">
    <value>Overcast, thundery snow showers</value>
  </data>
  <data name="14" xml:space="preserve">
    <value>Very cloudy, light rain</value>
  </data>
  <data name="140" xml:space="preserve">
    <value>Very cloudly, slightly stormy</value>
  </data>
  <data name="141" xml:space="preserve">
    <value>Overcast, slightly stormy</value>
  </data>
  <data name="142" xml:space="preserve">
    <value>Very cloudly, thundery snow showers</value>
  </data>
  <data name="15" xml:space="preserve">
    <value>Very cloudy, light sleet</value>
  </data>
  <data name="16" xml:space="preserve">
    <value>Very cloudy, light snow showers</value>
  </data>
  <data name="17" xml:space="preserve">
    <value>Very cloudy, intermittent rain</value>
  </data>
  <data name="18" xml:space="preserve">
    <value>Very cloudy, intermittent sleet</value>
  </data>
  <data name="19" xml:space="preserve">
    <value>Very cloudy, intermittent snow</value>
  </data>
  <data name="2" xml:space="preserve">
    <value>Mostly sunny with some clouds</value>
  </data>
  <data name="20" xml:space="preserve">
    <value>Very overcast with rain</value>
  </data>
  <data name="21" xml:space="preserve">
    <value>Very overcast with frequent sleet</value>
  </data>
  <data name="22" xml:space="preserve">
    <value>Very overcast with heavy snow</value>
  </data>
  <data name="23" xml:space="preserve">
    <value>Very overcast, slight chance of storms</value>
  </data>
  <data name="24" xml:space="preserve">
    <value>Very overcast with storms</value>
  </data>
  <data name="25" xml:space="preserve">
    <value>Very cloudy, very stormy</value>
  </data>
  <data name="26" xml:space="preserve">
    <value>High cloud cover</value>
  </data>
  <data name="27" xml:space="preserve">
    <value>Stratus</value>
  </data>
  <data name="28" xml:space="preserve">
    <value>Fog</value>
  </data>
  <data name="29" xml:space="preserve">
    <value>Sunny intervals, scattered showers</value>
  </data>
  <data name="3" xml:space="preserve">
    <value>Partly sunny, thick passing clouds</value>
  </data>
  <data name="30" xml:space="preserve">
    <value>Sunny intervals, scattered snow showers</value>
  </data>
  <data name="31" xml:space="preserve">
    <value>Sunny intervals, scattered sleet</value>
  </data>
  <data name="32" xml:space="preserve">
    <value>Sunny intervals, some showers</value>
  </data>
  <data name="33" xml:space="preserve">
    <value>Short sunny intervals, frequent rain</value>
  </data>
  <data name="34" xml:space="preserve">
    <value>Short sunny intervals, frequent snowfalls</value>
  </data>
  <data name="35" xml:space="preserve">
    <value>Overcast and dry</value>
  </data>
  <data name="36" xml:space="preserve">
    <value>Partly sunny, slightly stormy</value>
  </data>
  <data name="37" xml:space="preserve">
    <value>Partly sunny, stormy snow showers</value>
  </data>
  <data name="38" xml:space="preserve">
    <value>Overcast, thundery showers</value>
  </data>
  <data name="39" xml:space="preserve">
    <value>Overcast, thundery snow showers</value>
  </data>
  <data name="4" xml:space="preserve">
    <value>Overcast</value>
  </data>
  <data name="40" xml:space="preserve">
    <value>Very cloudly, slightly stormy</value>
  </data>
  <data name="41" xml:space="preserve">
    <value>Overcast, slightly stormy</value>
  </data>
  <data name="42" xml:space="preserve">
    <value>Very cloudly, thundery snow showers</value>
  </data>
  <data name="5" xml:space="preserve">
    <value>Very cloudy</value>
  </data>
  <data name="51" xml:space="preserve">
    <value>Clear sky</value>
  </data>
  <data name="52" xml:space="preserve">
    <value>Slightly overcast</value>
  </data>
  <data name="53" xml:space="preserve">
    <value>Heavy cloud formations</value>
  </data>
  <data name="54" xml:space="preserve">
    <value>Overcast</value>
  </data>
  <data name="55" xml:space="preserve">
    <value>Very cloudy</value>
  </data>
  <data name="56" xml:space="preserve">
    <value>Overcast, scattered showers</value>
  </data>
  <data name="57" xml:space="preserve">
    <value>Overcast, scattered rain and snow showers</value>
  </data>
  <data name="58" xml:space="preserve">
    <value>Overcast, snow showers</value>
  </data>
  <data name="59" xml:space="preserve">
    <value>Overcast, some showers</value>
  </data>
  <data name="6" xml:space="preserve">
    <value>Sunny intervals, isolated showers</value>
  </data>
  <data name="60" xml:space="preserve">
    <value>Overcast, some rain and snow showers</value>
  </data>
  <data name="61" xml:space="preserve">
    <value>Overcast, some snow showers</value>
  </data>
  <data name="62" xml:space="preserve">
    <value>Slightly stormy</value>
  </data>
  <data name="63" xml:space="preserve">
    <value>Storms</value>
  </data>
  <data name="64" xml:space="preserve">
    <value>Very cloudy, light rain</value>
  </data>
  <data name="65" xml:space="preserve">
    <value>Very cloudy, light rain and snow showers</value>
  </data>
  <data name="66" xml:space="preserve">
    <value>Very cloudy, light snowfall</value>
  </data>
  <data name="67" xml:space="preserve">
    <value>Very cloudy, intermittent rain</value>
  </data>
  <data name="68" xml:space="preserve">
    <value>Very cloudy, intermittant mixed rain and snowfall</value>
  </data>
  <data name="69" xml:space="preserve">
    <value>Very cloudy, intermittent snowfall</value>
  </data>
  <data name="7" xml:space="preserve">
    <value>Sunny intervals, isolated sleet</value>
  </data>
  <data name="70" xml:space="preserve">
    <value>Very cloudy, constant rain</value>
  </data>
  <data name="71" xml:space="preserve">
    <value>Very cloudy, frequent rain and snowfall</value>
  </data>
  <data name="72" xml:space="preserve">
    <value>Very cloudy, heavy snowfall</value>
  </data>
  <data name="73" xml:space="preserve">
    <value>Very cloudy, slightly stormy</value>
  </data>
  <data name="74" xml:space="preserve">
    <value>Very cloudy, stormy</value>
  </data>
  <data name="75" xml:space="preserve">
    <value>Very cloudy, storms</value>
  </data>
  <data name="76" xml:space="preserve">
    <value>High cloud cover</value>
  </data>
  <data name="77" xml:space="preserve">
    <value>Stratus</value>
  </data>
  <data name="78" xml:space="preserve">
    <value>Fog</value>
  </data>
  <data name="8" xml:space="preserve">
    <value>Sunny intervals, snow showers</value>
  </data>
  <data name="9" xml:space="preserve">
    <value>Overcast, some rain showers</value>
  </data>
</root>