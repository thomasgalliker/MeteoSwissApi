<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<AssemblyTitle>MeteoSwissApi</AssemblyTitle>
		<Description>.NET API for Swiss national weather provider MeteoSwiss</Description>
		<VersionPrefix>1.0.0</VersionPrefix>
		<Version>1.0.0</Version>
		<Authors>Thomas Galliker</Authors>
		<TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
		<AssemblyName>MeteoSwissApi</AssemblyName>
		<PackageId>MeteoSwissApi</PackageId>
		<PackageTags>MeteoSwiss;Meteo;Swiss;Weather;Forecast;Temperature;Precipitation</PackageTags>
		<PackageIconUrl>https://raw.githubusercontent.com/thomasgalliker/MeteoSwissApi/develop/Images/logo.png</PackageIconUrl>
		<PackageProjectUrl>https://github.com/thomasgalliker/MeteoSwissApi</PackageProjectUrl>
		<PackageLicenseUrl>http://opensource.org/licenses/Apache-2.0</PackageLicenseUrl>
		<RepositoryType>git</RepositoryType>
		<RepositoryUrl>https://github.com/thomasgalliker/MeteoSwissApi</RepositoryUrl>
		<SignAssembly>True</SignAssembly>
		<LangVersion>latest</LangVersion>
	</PropertyGroup>

	<PropertyGroup>
		<ApplicationIcon />
		<OutputType>Library</OutputType>
		<StartupObject />
		<Company>superdev GmbH</Company>
		<Product>MeteoSwissApi</Product>
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<RootNamespace>MeteoSwissApi</RootNamespace>
		<PackageReleaseNotes>3.0.x
- Add service to retrieve SwissMetNet weather stations
- Add service to retrieve SLF weather stations
- Add response caching
- Add high-contrast svg icons
- Add support for Microsoft.Extensions.DependencyInjection

2.0.x
- Replace Temperature type with UnitsNet Temperature

1.3.x
- Maintenance updates

1.2.x
- Maintenance updates

1.1.x
- Add new method GetForecastAsync
- Handle properties WarnType and WarnLevel with custom types

1.0.x
- Initial release
		</PackageReleaseNotes>
		<Copyright>Copyright 2023</Copyright>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CsvHelper" Version="[30.0.1,)" />
		<PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="[6.0.0,)" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="[6.0.0,)" />
		<PackageReference Include="Newtonsoft.Json" Version="[12.0.1,)" />
		<PackageReference Include="System.Text.Encoding.CodePages" Version="[7.0.0,)" />
		<PackageReference Include="UnitsNet" Version="[5.29.0,)" />
	</ItemGroup>

	<PropertyGroup Label="MultilingualAppToolkit">
		<MultilingualAppToolkitVersion>4.0</MultilingualAppToolkitVersion>
		<MultilingualFallbackLanguage>sv</MultilingualFallbackLanguage>
		<TranslationReport Condition="'$(Configuration)' == 'Release'">true</TranslationReport>
		<SuppressPseudoWarning Condition="'$(Configuration)' == 'Debug'">true</SuppressPseudoWarning>
	</PropertyGroup>
	<Import Project="$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\Microsoft.Multilingual.ResxResources.targets" Label="MultilingualAppToolkit" Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\v$(MultilingualAppToolkitVersion)\Microsoft.Multilingual.ResxResources.targets')" />
	<Target Name="MATPrerequisite" BeforeTargets="PrepareForBuild" Condition="!Exists('$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\Microsoft.Multilingual.ResxResources.targets')" Label="MultilingualAppToolkit">
		<Warning Text="$(MSBuildProjectFile) is Multilingual build enabled, but the Multilingual App Toolkit is unavailable during the build. If building with Visual Studio, please check to ensure that toolkit is properly installed." />
	</Target>
	<ItemGroup>
		<None Remove="MultilingualResources\MeteoSwissApi.de.xlf" />
		<None Remove="MultilingualResources\MeteoSwissApi.en.xlf" />
		<None Remove="MultilingualResources\MeteoSwissApi.fr.xlf" />
		<None Remove="MultilingualResources\MeteoSwissApi.it.xlf" />
	</ItemGroup>
	<ItemGroup>
		<None Remove="Resources\Icons\**\*.svg" />
		<EmbeddedResource Include="Resources\Icons\**\*.svg" />
	</ItemGroup>
	<ItemGroup>
		<XliffResource Include="MultilingualResources\MeteoSwissApi.de.xlf" />
		<XliffResource Include="MultilingualResources\MeteoSwissApi.en.xlf" />
		<XliffResource Include="MultilingualResources\MeteoSwissApi.fr.xlf" />
		<XliffResource Include="MultilingualResources\MeteoSwissApi.it.xlf" />
	</ItemGroup>
	<ItemGroup>
		<Compile Update="Resources\Strings\CardinalWindDirections.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>CardinalWindDirections.resx</DependentUpon>
		</Compile>
		<Compile Update="Resources\Strings\CardinalWindDirectionsAcronyms.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>CardinalWindDirectionsAcronyms.resx</DependentUpon>
		</Compile>
		<Compile Update="Resources\Strings\WarnLevels.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>WarnLevels.resx</DependentUpon>
		</Compile>
		<Compile Update="Resources\Strings\WarnTypes.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>WarnTypes.resx</DependentUpon>
		</Compile>
	</ItemGroup>
	<ItemGroup>
		<EmbeddedResource Update="Resources\Strings\CardinalWindDirections.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>CardinalWindDirections.Designer.cs</LastGenOutput>
		</EmbeddedResource>
		<EmbeddedResource Update="Resources\Strings\CardinalWindDirectionsAcronyms.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>CardinalWindDirectionsAcronyms.Designer.cs</LastGenOutput>
		</EmbeddedResource>
		<EmbeddedResource Update="Resources\Strings\WarnLevels.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>WarnLevels.Designer.cs</LastGenOutput>
		</EmbeddedResource>
		<EmbeddedResource Update="Resources\Strings\WarnTypes.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>WarnTypes.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>
</Project>